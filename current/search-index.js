var searchIndex = new Map(JSON.parse('[\
["songbird",{"doc":"project logo","t":"FFFEEEEEFFENNNNNNNNNNONNNNNNNNNNNNNOCNNONNNNONONNNNNOCNONOONNNNCCNNNNNNONNNNNNNONNNONCNNCNNNNNNNNNNNNNNNCNNNNNNNOENNNENONONONNNNOCNNNONCNNNNNNNOCNNNNNNNNNNNNNNNNNENNNOONNNNNSSSSSSSSSSSSSSSSSSPGPFGJPGPPFPFPPGPPPFFGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNENNNNNNNNNNCNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNPGIEPPPPPPPPPPPPPGIPFPPPPEEPPPEPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPGPPPPPPPPPGGFKFPPPPPPPPPPPPPPPGGPPMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPFFGGPPPPFFPPFFPNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNOOOOOOOOONNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKFGFGFKPPFFGPPGGFGPPPPPFPPFPPPPFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCOOONNNNNNNNNNNNNNNNCOEMNNNMNNNOONNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNONNNNNNNNNNNNNNNNONNNNOONNNMNNNNNNNNNNOOONOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNPGFFPPPPFGGFPPPFPPPPPPPHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNHNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJFFJFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHFFNNNNNNNNNNNNNNNNNNNNNNNNKFNNNHNNHHMMMHNNNNPPKPPFFGGPPFKNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNFGPPPPPPPPPPGPPPPPGGPPFGPPFFFFIFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNONNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNN","n":["Call","Config","ConnectionInfo","CoreEvent","Driver","Event","EventContext","EventHandler","Iter","Songbird","TrackEvent","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","clone","clone","clone","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","codec_registry","codec_registry","constants","count","crypto_mode","crypto_mode","current_channel","current_connection","deafen","decode_mode","decode_mode","decode_state_timeout","decode_state_timeout","default","deref","deref_mut","deregister_shard","disposer","disposer","driver","driver_retry","driver_retry","driver_timeout","driver_timeout","endpoint","eq","equivalent","equivalent","equivalent","error","events","fmt","fmt","fmt","fmt","fold","format_registry","format_registry","from","from","from","from","from","from_config","gateway_timeout","gateway_timeout","get","get_or_insert","get_scheduler","guild_id","hash","id","initialise","initialise_client_data","input","into","into","into","into","into","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","is_deaf","is_mute","iter","join","join","join","join_gateway","join_gateway","leave","leave","mix_mode","mix_mode","model","mute","new","next","packet","playout_buffer_length","playout_buffer_length","playout_spike_length","playout_spike_length","preallocated_tracks","preallocated_tracks","process","register_shard","remove","scheduler","scheduler","serenity","serenity","serenity_from_config","server_update","session_id","set_config","shards","size_hint","standalone","standalone_from_config","state_update","to_owned","to_owned","to_owned","token","tracks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twilight","twilight_from_config","type_id","type_id","type_id","type_id","type_id","typemap","update_server","update_state","use_softclip","use_softclip","user_id","vzip","vzip","vzip","vzip","vzip","AUDIO_FRAME_RATE","CHILD_BUFFER_LEN","DEFAULT_BITRATE","FRAME_LEN_MS","MONO_FRAME_BYTE_SIZE","MONO_FRAME_SIZE","RTP_PROFILE_TYPE","RTP_VERSION","SAMPLE_RATE","SAMPLE_RATE_RAW","SILENT_FRAME","STEREO_FRAME_BYTE_SIZE","STEREO_FRAME_SIZE","TIMESTEP_LENGTH","UDP_KEEPALIVE_GAP","UDP_KEEPALIVE_GAP_MS","VOICE_GATEWAY_VERSION","VOICE_PACKET_MAX","Auto","Bitrate","BitsPerSecond","Connect","CryptoMode","DEFAULT_SCHEDULER","Decode","DecodeMode","Decrypt","Disconnected","Driver","Lite","LiveStatBlock","Max","MaxPerThread","MixMode","Mono","Normal","Pass","Scheduler","SchedulerConfig","SchedulerError","SchedulerMode","Stereo","Suffix","add_global_event","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","config","connect","default","default","default","default","default","drop","encrypt_in_place","enqueue","enqueue_input","enqueue_with_preload","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into","into","into","into","into_future","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_mute","last_compute_cost_ns","leave","live_mixers","live_tasks","move_expensive_tasks","mute","new","new","nonce_size","opus","payload_overhead","payload_prefix_len","payload_suffix_len","play","play_input","play_only","play_only_input","poll","queue","remove_all_global_events","retry","set_bitrate","set_config","should_decrypt","source","stop","strategy","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_request_str","to_string","total_tasks","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","worker_thread_stats","worker_thread_stats_blocking","worker_threads","Backoff","Every","ExponentialBackoff","Retry","Strategy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","default","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_sample","into_sample","into_sample","jitter","max","min","retry_limit","strategy","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AttemptDiscarded","ConnectionError","ConnectionResult","ControlError","Crypto","CryptoInvalidLength","CryptoModeInvalid","CryptoModeUnavailable","Driver","Dropped","EndpointUrl","Err","Err","IllegalDiscoveryResponse","IllegalIp","InterconnectFailure","Io","JoinError","JoinResult","Json","JsonError","NoCall","NoSender","Ok","Ok","PlayError","SchedulerError","Serenity","TimedOut","TimedOut","TrackResult","Twilight","Ws","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","classify","column","custom","custom","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into_sample","into_sample","into_sample","invalid_type","invalid_value","io_error_kind","is_data","is_eof","is_io","is_syntax","line","should_leave_server","should_reconnect_driver","source","source","source","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Cancel","ClientDisconnect","ClientDisconnect","Core","Core","CoreEvent","Delayed","DriverConnect","DriverConnect","DriverDisconnect","DriverDisconnect","DriverReconnect","DriverReconnect","End","Error","Event","EventContext","EventData","EventHandler","EventStore","Loop","Pause","Periodic","Play","Playable","Preparing","RtcpPacket","RtcpPacket","RtpPacket","RtpPacket","SpeakingStateUpdate","SpeakingStateUpdate","Track","Track","Track","TrackEvent","UntimedEvent","VoiceTick","VoiceTick","act","add_event","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","cmp","compare","compute_activation","context_data","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","new","new","new_local","partial_cmp","to_core_event","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AttemptDiscarded","Connect","ConnectData","DisconnectData","DisconnectKind","DisconnectReason","Internal","Io","ProtocolViolation","Reconnect","RtcpData","RtpData","Runtime","TimedOut","VoiceData","VoiceTick","WsClosed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","decoded_voice","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","guild_id","guild_id","hash","hash","into","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","kind","packet","packet","packet","payload_end_pad","payload_end_pad","payload_offset","payload_offset","reason","rtcp","rtp","server","session_id","session_id","silent","speaking","ssrc","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChannelId","GuildId","UserId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","into_sample","into_sample","into_sample","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AsyncAdapterStream","AsyncMediaSource","AudioStream","AudioStreamError","AuxMetadata","AuxMetadataError","ChildContainer","Compose","Create","Fail","File","HttpRequest","Input","Lazy","Live","LiveInput","MakePlayableError","Metadata","MetadataError","NoCompose","NotLive","NotParsed","Panicked","Parse","Parsed","Parsed","Raw","RawAdapter","Retrieve","RetryIn","Unsupported","Wrapped","YoutubeDl","album","artist","aux_metadata","aux_metadata","aux_metadata","aux_metadata","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_len","byte_len","byte_len","cached","channel","channels","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","codecs","content_length","core","create","create","create","create","create_async","create_async","create_async","create_async","date","decoder","default","drop","duration","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ffprobe_json","headers","hint","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_playable","is_playable","is_seekable","is_seekable","is_seekable","live","live_mut","make_live","make_live_async","make_playable","make_playable_async","meta","metadata","metadata","new","new","new","new","new","new","new_search","new_search_ytdl_like","new_with_headers","new_ytdl_like","parsed","parsed","parsed_mut","parsed_mut","probe","promote","read","read","read","request","sample_rate","search","seek","seek","should_create_async","should_create_async","should_create_async","should_create_async","skip","skip","skip","source","source","source","source","source_url","start_time","supports_backseek","take","thumbnail","title","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","track","track_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resume","try_resume","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bytes","CodecCacheError","Compressed","Config","Create","Create","CreatePanicked","CreatePanicked","Decompressed","Error","LengthHint","Memory","MetadataEncoding","MetadataTooLarge","Opus","OpusCompressor","Parse","StreamNotAtStart","StreamNotAtStart","Streamcatcher","Streamcatcher","Time","UnknownChannelCount","apply_length_hint","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_len","byte_len","byte_len","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","codec_registry","compressed_cost_per_sec","default","default_config","default_from_cost","fmt","fmt","fmt","fmt","fmt","fmt","format_registry","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_seekable","is_seekable","is_seekable","min_bytes_required","new","new","new","new_handle","new_handle","new_handle","raw","raw","raw","raw_cost_per_sec","read","read","read","seek","seek","seek","skip","skip","skip","state","streamcatcher","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transform_read","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_config","with_config","with_config","CODEC_REGISTRY","DcaReader","OpusDecoder","PROBE","RawReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","codec_params","cues","cues","decode","default_track","default_track","finalize","from","from","from","into","into","into","into_inner","into_inner","into_sample","into_sample","into_sample","last_decoded","metadata","metadata","next_packet","next_packet","query","query","reset","score","score","seek","seek","supported_codecs","tracks","tracks","try_from","try_from","try_from","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","vzip","vzip","vzip","byte_count_to_timestamp","decoder","sample_count_to_timestamp","timestamp_to_byte_count","timestamp_to_sample_count","Join","JoinGateway","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_future","into_future","into_sample","into_sample","poll","poll","try_from","try_from","try_into","try_into","try_poll","try_poll","type_id","type_id","vzip","vzip","SerenityInit","SongbirdKey","borrow","borrow_mut","from","get","into","into_sample","register","register_from_config","register_songbird","register_songbird_from_config","register_songbird_with","register_with","try_from","try_into","type_id","vzip","Generic","Generic","GenericSharder","Serenity","Serenity","SerenityShardHandle","SerenitySharder","Shard","Sharder","Twilight","Twilight","TwilightMap","VoiceUpdate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_storage","clone_storage","default","default","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get_shard","get_shard","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","new","shard_count","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_voice_state","update_voice_state","vzip","vzip","vzip","vzip","vzip","Action","ControlError","Create","Decode","Dropped","End","Err","Errored","Finished","Finite","Infinite","InvalidTrackEvent","LoopState","Ok","Parse","Pause","Play","Play","PlayError","PlayMode","Playable","Preparing","Queued","ReadyState","Seek","Stop","Track","TrackCallback","TrackHandle","TrackQueue","TrackResult","TrackState","Uninitialised","View","action","add","add_event","add_source","add_with_preload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","clone_storage","current","current_queue","default","default","default","default","default","default","dequeue","deref","disable_loop","enable_loop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","events","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_info","handle","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_done","is_empty","is_hung_up","len","loop_for","loops","loops","loops","loops","make_playable","make_playable","make_playable_async","meta","modify_queue","new","new","new_with_uuid","pause","pause","pause","play","play","play_time","play_time","playing","playing","playing","position","position","ready","ready","result","result_async","resume","seek","seek","seek_async","set_volume","skip","stop","stop","stop","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typemap","uuid","uuid","uuid","volume","volume","volume","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"songbird"],[173,"songbird::constants"],[191,"songbird::driver"],[434,"songbird::driver::retry"],[494,"songbird::error"],[590,"songbird::events"],[759,"songbird::events::context_data"],[944,"songbird::id"],[1022,"songbird::input"],[1350,"songbird::input::cached"],[1520,"songbird::input::codecs"],[1579,"songbird::input::utils"],[1584,"songbird::join"],[1610,"songbird::serenity"],[1628,"songbird::shards"],[1705,"songbird::tracks"],[1999,"typemap_rev"],[2000,"alloc::boxed"],[2001,"typemap_rev"],[2002,"core::option"],[2003,"core::time"],[2004,"core::future::future"],[2005,"core::pin"],[2006,"core::fmt"],[2007,"core::fmt"],[2008,"symphonia_core::probe"],[2009,"core::convert"],[2010,"core::fmt"],[2011,"alloc::sync"],[2012,"core::hash"],[2013,"serenity::model::id"],[2014,"core::num::nonzero"],[2015,"twilight_model::gateway::event"],[2016,"serenity::gateway::bridge::shard_runner_message"],[2017,"futures_channel::mpsc"],[2018,"serenity::model::id"],[2019,"serenity::model::voice"],[2020,"core::result"],[2021,"core::any"],[2022,"crypto_secretbox"],[2023,"aead"],[2024,"pnet_macros_support::packet"],[2025,"core::fmt"],[2026,"core::task::wake"],[2027,"core::task::poll"],[2028,"core::error"],[2029,"audiopus::error"],[2030,"alloc::vec"],[2031,"serde_json::error"],[2032,"core::fmt"],[2033,"tokio::time::error"],[2034,"twilight_gateway::error"],[2035,"futures_channel::mpsc"],[2036,"serde::de"],[2037,"discortp::rtcp"],[2038,"discortp::rtp"],[2039,"core::num::nonzero"],[2040,"twilight_model::id"],[2041,"serenity::model::id"],[2042,"core::clone"],[2043,"std::path"],[2044,"core::convert"],[2045,"core::marker"],[2046,"symphonia_core::errors"],[2047,"tokio::runtime::handle"],[2048,"reqwest::async_impl::client"],[2049,"http::header::map"],[2050,"std::io::error"],[2051,"streamcatcher"],[2052,"tokio::runtime::task::error"],[2053,"streamcatcher"],[2054,"symphonia_core::formats"],[2055,"symphonia_core::errors"],[2056,"symphonia_core::meta"],[2057,"symphonia_core::probe"],[2058,"audiopus::error"],[2059,"serenity::client"],[2060,"twilight_gateway::channel"],[2061,"std::collections::hash::map"],[2062,"core::ops::function"],[2063,"uuid"],[2064,"typemap_rev"]],"d":["The Call handler is responsible for a single voice …","Configuration for drivers and calls.","Parameters and information needed to start communicating …","","","","","","An iterator over all <code>Call</code>s currently stored in the manager …","A shard-aware struct responsible for managing <code>Call</code>s.","","","","","","","","","","","","ID of the voice channel being joined, if it is known.","","","","","","","","","","","","","Sets this <code>Config</code>’s symphonia codec registry.","Registry of the inner codecs supported by the driver, …","Constants affecting driver function and API handling.","","Sets this <code>Config</code>’s chosen cryptographic tagging scheme.","Selected tagging mode for voice packet encryption.","Returns <code>id</code> of the channel, if connected or connecting to …","Returns the current voice connection details for this Call,","Sets whether the current connection is to be deafened.","Sets this <code>Config</code>’s received packet decryption/decoding …","Configures whether decoding and decryption occur for all …","Sets this <code>Config</code>’s received packet decoder cleanup timer.","Configures the amount of time after a user/SSRC is …","","","","","Sets this <code>Config</code>’s channel for sending disposal messages.","The Sender for a channel that will run the destructor of …","Runner for a voice connection.","Sets this <code>Config</code>’s voice connection retry configuration.","Connection retry logic for the <code>Driver</code>.","Sets this <code>Config</code>’s timeout for establishing a voice …","Configures the maximum amount of time to wait for an …","URL of the voice websocket gateway server assigned to this …","","","","","Driver and gateway error handling.","Events relating to tracks, timing, and other callers.","","","","","","Sets this <code>Config</code>’s symphonia format registry/probe set.","Registry of the muxers and container formats supported by …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Call, configuring the driver as specified.","Sets this <code>Config</code>’s timeout for joining a voice channel.","Configures the amount of time to wait for Discord to reply …","Retrieves a <code>Call</code> for the given guild, if one already …","Retrieves a <code>Call</code> for the given guild, creating a new one if","Returns a lightweight reference to the audio scheduler …","ID of the target voice channel’s parent guild.","","Newtypes around Discord IDs for library …","","Set the bot’s user, and the number of shards in use.","Raw audio input data streams and sources.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns whether the current connection is self-deafened in …","Returns whether the current connection is self-muted in …","Creates an iterator for all <code>Call</code>s currently managed.","Future types for gateway interactions.","Connect or switch to the given voice channel by its Id.","Connects to a target by retrieving its relevant <code>Call</code> and …","Join the selected voice channel, <em>without</em> running/starting …","Partially connects to a target by retrieving its relevant …","Leaves the current voice channel, disconnecting from it.","Retrieves the handler for the given target and leaves the …","Sets this <code>Config</code>’s audio mixing channel count.","Configures whether the driver will mix and output stereo …","","Sets whether the current connection is to be muted.","Creates a new Call, which will send out WebSocket messages …","","","Sets this <code>Config</code>’s playout buffer length, in packets.","Configures the number of audio packets to buffer for each …","Sets this <code>Config</code>’s additional pre-allocated space to …","Configures the initial amount of extra space allocated to …","Sets this <code>Config</code>’s number of tracks to preallocate.","Number of concurrently active tracks to allocate memory …","Handle events received on the cluster.","","Retrieves the <code>Call</code> for the given target and leaves the …","Sets this <code>Config</code>’s mixer scheduler.","The scheduler is responsible for mapping idle and active …","Compatibility and convenience methods for working with …","Create a new Songbird instance for serenity.","Create a new Songbird instance for serenity, using the …","","Unique string describing this session for …","Sets a shared configuration for all drivers created from …","Handlers for sending packets over sharded connections.","","Creates a new, standalone Call which is not connected via …","Creates a new standalone Call from the given configuration …","","","","","Ephemeral secret used to validate the above session.","Live, controllable audio instances.","","","","","","","","","","","Create a new Songbird instance for twilight.","Create a new Songbird instance for twilight.","","","","","","","Updates the voice server data.","Updates the internal voice state of the current user.","Sets this <code>Config</code>’s number to enable/disable …","Configures whether or not each mixed audio packet is …","UserID of this bot.","","","","","","Number of audio frames/packets to be sent per second.","Maximum number of audio frames/packets to be sent per …","Default bitrate for audio.","Length (in milliseconds) of any audio frame.","Number of bytes in one complete frame of raw <code>f32</code>-encoded …","Number of samples in one complete frame of audio per …","Profile type used by Discord’s Opus audio traffic.","The one (and only) RTP version.","Sample rate of audio to be sent to Discord.","Sample rate of audio to be sent to Discord.","Opus silent frame, used to signal speech start and end …","Number of bytes in one complete frame of raw <code>f32</code>-encoded …","Number of individual samples in one complete frame of …","Length of time between any two audio frames.","Type-converted delay between sends of UDP keepalive frames.","Delay between sends of UDP keepalive frames.","The voice gateway version used by the library.","Maximum packet size for a voice packet.","Default bitrate decided by the encoder (not recommended).","Opus encoder bitrate settings.","Explicit bitrate choice (in bits/second).","Future for a call to <code>Driver::connect</code>.","Variants of the <code>XSalsa20Poly1305</code> encryption scheme.","The default shared scheduler instance.","Decrypts and decodes each received packet, correctly …","Decode behaviour for received RTP packets within the …","Decrypts the body of each received packet.","The scheduler exited or crashed while awating the request.","The control object for a Discord voice connection, …","An additional random 4B suffix is used as the source of …","Runtime statistics for an individual worker.","Maximum bitrate allowed (up to maximum number of bytes for …","Allows at most <code>n</code> tasks to run per thread.","Mixing behaviour for sent audio sources processed within …","Audio sources will be downmixed into a mono buffer.","The RTP header is used as the source of nonce bytes for …","Packets received from Discord are handed over to events …","A reference to a shared group of threads used for running …","Configuration for how a <code>Scheduler</code> handles tasks.","Errors encountered when communicating with the internals …","Strategies for mapping live mixer tasks to individual …","Audio sources will be mixed into into a stereo buffer, …","An additional random 24B suffix is used as the source of …","Attach a global event handler to an audio context. Global …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a view of this driver’s configuration.","Connects to a voice channel using the specified server.","","","","","","Leaves the current connected voice channel, if connected …","Encrypts a Discord RT(C)P packet using the given key.","Adds an existing <code>Track</code> to this driver’s built-in queue.","Adds an audio <code>Input</code> to this driver’s built-in queue.","Add an existing <code>Track</code> to the queue, using a known time to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns whether the driver is muted (i.e., processes audio …","Returns the number of nanoseconds required to process all …","Leaves the current voice channel, disconnecting from it.","Returns the number of mixer tasks scheduled on this worker …","Returns the total number of <em>active</em> calls scheduled and …","Move costly mixers to another thread if their parent …","Sets whether the current connection is to be muted.","Create a new mixer scheduler from the allocation strategy …","Creates a new voice driver.","Returns the number of bytes each nonce is stored as within …","Opus encoder bitrate settings.","Calculates the number of additional bytes required compared","Returns the number of bytes occupied by the encryption …","Returns the number of bytes occupied by the encryption …","Plays audio from a <code>Track</code> object.","Plays audio from an input, returning a handle for further …","Exclusively plays audio from a <code>Track</code> object.","Plays audio from an input, returning a handle for further …","","Returns a reference to this driver’s built-in queue.","Removes all global event handlers from an audio context.","Configuration for connection retries.","Sets the bitrate for encoding Opus packets sent along the …","Sets the configuration for this driver (and parent <code>Call</code>, …","Returns whether this mode will decrypt received packets.","","Stops playing audio from all sources, if any are set.","How Live mixer tasks will be mapped to individual threads.","","","","","","","","","Returns the name of a mode as it will appear during …","","Returns the total number of calls (idle and active) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Request a list of handles to statistics for currently live …","Request a list of handles to statistics for currently live …","Returns the total number of threads spawned to process …","Exponential backoff waiting strategy, where the duration …","The driver will wait for the same amount of time between …","Exponential backoff waiting strategy.","Configuration to be used for retrying driver connection …","Logic used to determine how long to wait between retry …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Amount of uniform random jitter to apply to generated wait …","Maximum amount of time to wait between retries.","Minimum amount of time to wait between retries.","The maximum number of retries to attempt.","Strategy used to determine how long to wait between retry …","","","","","","","","","","","","","","","","The driver hung up an internal signaller, either due to …","Errors encountered while connecting to a Discord voice …","Convenience type for Discord voice/driver connection error …","","An error occurred during [en/de]cryption of voice packets.","The symmetric key supplied by Discord had the wrong size.","Server did not return the expected crypto mode during …","Selected crypto mode was not offered by server.","The driver failed to establish a voice connection.","Request to join was dropped, cancelled, or replaced.","An indicator that an endpoint URL was invalid.","Contains the error value","Contains the error value","Discord failed to correctly respond to IP discovery.","Could not parse Discord’s view of our IP.","Failed to message other background tasks after connection …","Miscellaneous I/O error.","Error returned when a manager or call handler is unable to …","Convenience type for Discord gateway error handling.","JSON (de)serialization error.","This type represents all possible errors that can occur …","Tried to leave a <code>Call</code> which was not found.","No available gateway connection was provided to send voice …","Contains the success value","Contains the success value","","","Serenity-specific WebSocket send error.","Connection attempt timed out.","Connection details were not received from Discord in the …","","Twilight-specific WebSocket send error when a message …","Error communicating with gateway server over WebSocket.","","","","","","","Categorizes the cause of this error.","One-based column number at which the error was detected.","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The kind reported by the underlying standard library I/O …","Returns true if this error was caused by input data that …","Returns true if this error was caused by prematurely …","Returns true if this error was caused by a failure to read …","Returns true if this error was caused by input that was not","One-based line number at which the error was detected.","Indicates whether this failure may have left (or been …","Indicates whether this failure can be reattempted via …","","","","","","","","","","","","","","","","","","","Cancels the event, if it was intended to persist.","Fired whenever a client disconnects.","Fires whenever a user disconnects from the same stream as …","Untimed events belonging to the global context, such as …","Core events","Voice core events occur on receipt of voice packets and …","Delayed events rely upon a <em>delay</em> parameter, and fire one …","Fires when this driver successfully connects to a voice …","Fires when this driver successfully connects to a voice …","Fires when this driver fails to connect to, or drops from, …","Fires when this driver fails to connect to, or drops from, …","Fires when this driver successfully reconnects after a …","Fires when this driver successfully reconnects after a …","The attached track has ended.","The attached track has encountered a runtime or …","Classes of event which may occur, triggering a handler at …","Information about which tracks or data fired an event.","Internal representation of an event, as handled by the …","Trait to handle an event which can be fired per-track, or …","Storage for <code>EventData</code>, designed to be used for both local …","The attached track has looped.","The attached track has been paused.","Periodic events rely upon two parameters: a <em>period</em> and an …","The attached track has resumed playing.","The attached track has become playable.","The attached track is being readied or recreated.","Telemetry/statistics packet, received from another stream.","Fires on receipt of an RTCP packet, containing various …","Opus audio packet, received from another stream.","Fires on receipt of a voice packet from another stream in …","Speaking state update, typically describing how another …","Speaking state update from the WS gateway, typically …","Track event context, passed to events created via …","Untimed events belonging to a track, such as state …","Track events correspond to certain actions or changes of …","Track events correspond to certain actions or changes of …","Track and voice core events.","Reordered and decoded audio packets, received every 20ms.","Fires every 20ms, containing the scheduled voice packet …","Respond to one received event.","Add an event to this store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the next firing time for a timer event.","Types containing the main body of an <code>EventContext</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a representation of an event and its associated …","Creates a new event store to be used globally.","Creates a new event store to be used within a <code>Track</code>.","","Retreive the event class for an event (i.e., when matching)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This (re)connection attempt was dropped due to another …","The voice driver failed to connect to the server.","Voice connection details gathered at setup/reinstantiation.","Voice connection details gathered at termination or …","The location that a voice connection was terminated.","The reason that a voice connection failed.","Songbird had an internal error.","A host-specific I/O error caused the fault; this is likely …","Songbird and Discord disagreed on the protocol used to …","The voice driver failed to reconnect to the server.","Telemetry/statistics packet, received from another stream …","Opus audio packet, received from another stream (detailed …","The voice connection was terminated mid-session by either …","A voice connection was not established in the specified …","Voice packet and audio data for a single user, from a …","Audio data from all users in a voice channel, fired every …","The Websocket connection was closed by Discord.","","","","","","","","","","","","","","","","","ID of the voice channel being joined, if it is known.","ID of the voice channel being joined, if it is known.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PCM audio obtained from a user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the target voice channel’s parent guild.","ID of the target voice channel’s parent guild.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The location that a voice connection was terminated.","Raw RTCP packet data.","Raw RTP packet data.","RTP packet clocked out for this tick.","Number of bytes at the end of the packet to discard.","Number of bytes at the end of the packet to discard.","Byte index into the packet body (after headers) for where …","Byte index into the packet body (after headers) for where …","The cause of any connection failure.","Create a zero-copy view of the inner RTCP packet.","Create a zero-copy view of the inner RTP packet.","The domain name of Discord’s voice/TURN server.","Unique string describing this session for …","Unique string describing this session for …","Set of all SSRCs currently known in the call who aren’t …","Decoded voice data and source packets sent by each user.","The RTP SSRC <em>(“Synchronisation source”)</em> assigned by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ID of a Discord voice/text channel.","ID of a Discord guild (colloquially, “server”).","ID of a Discord user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","An adapter for converting an async media source into a …","An async port of symphonia’s <code>MediaSource</code>.","An unread byte stream for an audio file.","Errors encountered when creating an <code>AudioStream</code> or …","Extra information about an <code>Input</code> which is acquired without …","Errors encountered when trying to access out-of-band …","Handle for a child process which ensures that any …","Data and behaviour required to instantiate a lazy audio …","Failed to create a <code>LiveInput</code> from the lazy <code>Compose</code>.","The operation failed, and should not be retried.","A lazily instantiated local file.","A lazily instantiated HTTP request.","An audio source, which can be live or lazily initialised.","A byte source which is not yet initialised.","An initialised byte source.","An initialised audio source.","Errors encountered when readying or pre-processing an <code>Input</code>…","In-stream information about an <code>Input</code> acquired by parsing …","Errors encountered when trying to access in-stream <code>Metadata</code>…","This input has no lazy <code>Compose</code> initialiser, which is …","This input is currently lazily initialised, and must be …","This input is ready, but has not had its headers parsed.","A blocking thread panicked or failed to return a parsed …","Failed to read headers, codecs, or a valid stream from a …","An audio file which has had its headers parsed and decoder …","An audio file which has had its headers parsed and decoder …","An unread, raw file stream.","Adapter around a raw, interleaved, <code>f32</code> PCM byte stream.","There was an error when trying to access auxiliary …","The operation failed, and should be retried after a given …","The operation was not supported, and will never succeed.","An unread file which has been wrapped with a large …","A lazily instantiated call to download a file, finding its …","The album name of this stream.","The main artist of this stream.","Requests auxiliary metadata which can be accessed without …","Requests auxiliary metadata which can be accessed without …","Requests auxiliary metadata which can be accessed without …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the length in bytes, if available. This may be an …","","","In-memory, shared input sources for reuse between calls, …","The YouTube channel of this stream.","The number of audio channels in this stream.","A reqwest client instance used to send the HTTP GET …","","","","","","","","","","","","","","","","","Codec registries extending Symphonia’s probe and …","Content length, used as an upper bound in range requests …","","Create a source synchronously.","","","","Create a source asynchronously.","","","","The date of creation of this stream.","Decoder state for the chosen track.","","","The reported duration of this stream.","","","","","","","","","","","","","","","","","","Metadata found inside the format/container of an audio …","Audio packet, seeking, and state access for all tracks in …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Extract metadata and details from the output of …","HTTP header fields to add to any created requests.","Extension and MIME type information which may help guide …","The wrapped file stream.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns whether this stream’s headers have been fully …","Returns whether this audio stream is full initialised, …","Returns if the source is seekable. This may be an …","","","Returns a reference to the live input, if it has been …","Returns a mutable reference to the live input, if it been …","Initialises (but does not parse) an <code>Input::Lazy</code> into an …","Initialises (but does not parse) an <code>Input::Lazy</code> into an …","Initialises and parses an <code>Input::Lazy</code> into an <code>Input::Live</code>, …","Initialises and parses an <code>Input::Lazy</code> into an <code>Input::Live</code>, …","Metadata extracted by symphonia while detecting a file’s …","Tries to get any information about this audio stream …","Tries to get any information about this audio stream …","Wrap and pull from an async file stream, with an …","Wrap an input PCM byte source to be readable by symphonia.","Create a new <code>ChildContainer</code> from a child process","Creates a lazy file object, which will open the target …","Create a lazy HTTP request.","Creates a lazy request to select an audio stream from <code>url</code>, …","Creates a request to search youtube for an optionally …","Creates a request to search youtube for an optionally …","Create a lazy HTTP request.","Creates a lazy request to select an audio stream from <code>url</code> …","Returns a reference to the data parsed from this input …","Returns a reference to the data parsed from this input …","Returns a mutable reference to the data parsed from this …","Returns a mutable reference to the data parsed from this …","Metadata found while probing for the format of an <code>Input</code> …","Converts this audio source into a <code>Parsed</code> object using the …","","","","The target URL of the required resource.","The sample rate of this stream.","Runs a search for the given query, returning a list of up …","","","Determines whether this source will be instantiated using …","","","","","","","","","","","The source url of this stream.","The time at which the first true sample is played back.","Whether the contained format supports arbitrary seeking.","Move all fields from an <code>AuxMetadata</code> object into a new one.","The thumbnail url of this stream.","The YouTube title of this stream.","","","","","","","","","The track name of this stream.","The chosen track’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to recreate this stream in event of an error, …","Tries to recreate this stream in event of an error, …","","","","","","","","","","","","","","","","","Utility methods for seeking or decoding.","","","","","","","","","","","","","","","","","Estimate of a source’s length in bytes.","Errors encountered using a <code>Compressed</code> or <code>Decompressed</code> …","A wrapper around an existing <code>Input</code> which compresses the …","Configuration for a cached source.","The audio stream could not be created.","The audio stream could not be created.","The audio stream failed to be created due to a panic in …","The audio stream failed to be created due to a panic in …","A wrapper around an existing <code>Input</code> which caches the …","Errors encountered using a <code>Memory</code> cached source.","Expected amount of time that an input should last.","A wrapper around an existing <code>Input</code> which caches its data …","The file’s metadata could not be converted to JSON.","The input’s metadata was too large after conversion to …","The Opus encoder could not be created.","Transform applied inside <code>Compressed</code>, converting a …","Symphonia failed to parse the container or decode the …","The input stream had already been read (i.e., <code>Parsed</code>) and …","The input stream had already been read (i.e., <code>Parsed</code>) and …","Streamcatcher’s configuration was illegal, and the cache …","Streamcatcher’s configuration was illegal, and the cache …","Estimate of a source’s length in time.","The audio stream’s channel count could not be determined.","Modify the given cache configuration to initially allocate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registry of audio codecs supported by the driver.","Estimates the cost, in B/s, of audio data compressed at …","","Provides the default config used by a cached source.","Generate a storage configuration given an estimated …","","","","","","","Registry of the muxers and container formats supported by …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Wrap an existing <code>Input</code> with an in-memory store, compressed …","Wrap an existing <code>Input</code> with an in-memory store, …","Wrap an existing <code>Input</code> with an in-memory store with the …","Acquire a new handle to this object, creating a new view …","Acquire a new handle to this object, creating a new view …","Acquire a new handle to this object, creating a new view …","Inner shared bytestore.","Inner shared bytestore.","Inner shared bytestore.","Calculates the cost, in B/s, of raw floating-point audio …","","","","","","","","","","","Configuration for the inner streamcatcher instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap an existing <code>Input</code> with an in-memory store, compressed …","Wrap an existing <code>Input</code> with an in-memory store, …","Wrap an existing <code>Input</code> with an in-memory store with the …","Default Symphonia <code>CodecRegistry</code>, including the …","DCA[0/1] Format reader for Symphonia.","Opus decoder for symphonia, based on libopus v1.3 (via …","Default Symphonia Probe, including DCA format support.","Symphonia support for a simple container for raw f32-PCM …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the time position in a <code>FloatPCM</code> stream from a …","Create an Opus decoder outputting at a sample rate of …","Calculates the time position in a <code>FloatPCM</code> stream from a …","Calculates the byte position in a <code>FloatPCM</code> stream from a …","Calculates the sample position in a <code>FloatPCM</code> stream from a …","Future for a call to <code>Call::join</code>.","Future for a call to <code>Call::join_gateway</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Helper trait to add installation/creation methods to …","Zero-size type used to retrieve the registered <code>Songbird</code> …","","","Returns the argument unchanged.","Retrieve the Songbird voice client from a serenity context…","Calls <code>U::from(self)</code>.","","Installs a new songbird instance into the serenity client.","Installs a given songbird instance into the serenity …","Registers a new Songbird voice system with serenity, …","Registers a Songbird voice system serenity, based on the …","Registers a given Songbird voice system with serenity, as …","Installs a given songbird instance into the serenity …","","","","","A generic shard handle source.","Handle to a generic shard instance.","Trait for a generic shard cluster or other handle source.","Serenity-specific wrapper for sharder state initialised by …","Handle to one of serenity’s shard runners.","Handle to an individual shard designed to buffer unsent …","Serenity-specific wrapper for sharder state initialised by …","A reference to an individual websocket connection.","Source of individual shard connection handles.","Twilight-specific wrapper for a map of command senders.","Handle to a map of twilight command senders.","Map containing <code>MessageSender</code>s for Twilight.","Trait for a generic shard handle to send voice state …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the message sender for <code>shard_id</code>.","Get access to a new shard","Returns a new handle to the required inner shard.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Construct a map of shards and command senders to those …","Get the total number of shards in the map.","","","","","","","","","","","","","","","","","Send a voice update message to the inner shard handle.","","","","","","","Actions for the mixer to take after inspecting track state …","Errors associated with control and manipulation of tracks.","Failed to create a live bytestream from the lazy <code>Compose</code>.","Failed to decode a frame received from an <code>Input</code>.","Another <code>seek</code>/<code>make_playable</code> request was made, and so this …","The track has naturally ended, and cannot be restarted.","Contains the error value","The track has encountered a runtime or initialisation …","The operation failed because the track has ended, has been …","Track will loop <code>n</code> more times.","Track will loop endlessly until loop state is changed or …","The supplied event listener can never be fired by a track, …","Looping behaviour for a <code>Track</code>.","Contains the success value","Failed to read headers, codecs, or a valid stream from an …","The track is currently paused, and may be resumed.","A command to seek or ready the target track failed when …","The track is currently playing.","Errors reported by the mixer while attempting to play (or …","Playback status of a track.","This track is fully initialised and usable.","The mixer is currently creating and parsing this track’s …","Reference to a track which is known to be part of a queue.","Whether this track has been made live, is being processed, …","Failed to seek to the requested location.","The track has been manually stopped, and cannot be …","Initial state for audio playback.","Asynchronous reply for an operation applied to a …","Handle for safe control of a <code>Track</code> from other threads, …","A simple queue for several audio sources, designed to play …","Alias for most calls to a <code>TrackHandle</code>.","State of an <code>Track</code> object, designed to be passed to event …","This track is still a lazy <code>Compose</code> object, and hasn’t …","Live track and input state exposed during …","Perform an arbitrary synchronous action on a raw <code>Track</code> …","Adds a <code>Track</code> object to the queue, to be played in the …","Attach an event handler to an audio track. These will …","Adds an audio source to the queue, to be played in the …","Add an existing <code>Track</code> to the queue, using a known time to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a handle to the currently playing track.","Returns a list of currently queued tracks.","","","","","","","Attempts to remove a track from the specified index.","","Set an audio track to no longer loop.","Set an audio track to loop indefinitely.","","","","","","","","","","","","","","List of events attached to this audio track.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Request playback information and state from the audio …","Clones the inner handle","The live or lazily-initialised audio stream to be played.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns whether the track has irreversibly stopped.","Returns whether there are no tracks currently in the queue.","Returns <code>true</code> if the operation instantly failed due to the …","Returns the number of tracks currently in the queue.","Set an audio track to loop a set number of times.","Set an audio track to loop a set number of times.","The number of remaning loops on this track.","Count of remaining loops.","Remaining loops on this track.","Readies the track to be playable, if this is not already …","Ready a track for playing if it is lazily initialised.","Ready a track for playing if it is lazily initialised.","In-stream metadata for this track, if it is fully readied.","Allows modification of the inner queue (i.e., deletion, …","Create a new track directly from an <code>Input</code> and a random <code>Uuid</code>…","Create a new, empty, track queue.","Create a new track directly from an <code>Input</code> with a custom …","Pre-emptively pauses a track, preventing it from being …","Pauses an audio track.","Pause the track at the head of the queue.","Sets a track to playing if it is paused.","Unpauses an audio track.","The total time a track has been played for.","Total playback time, increasing monotonically.","The current play status of this track.","Whether or not this sound is currently playing.","Play status (e.g., active, paused, stopped) of this track.","The current position within this track.","Current playback position in the source.","Whether this track has been made live, is being processed, …","Whether this track has been made live, is being processed, …","Consumes this handle to await a reply from the driver, …","Consumes this handle to await a reply from the driver …","Resume the track at the head of the queue.","Requests a seek to the given time for this track.","Seeks along the track to the specified position.","Seeks along the track to the specified position.","Sets the volume of an audio track.","Skip to the next track in the queue, if it exists.","Manually stops a track.","Stops an audio track.","Stop the currently playing track, and clears the queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows access to this track’s attached <code>TypeMap</code>.","Returns this track’s unique identifier.","Returns this handle’s (and track’s) unique identifier.","Unique identifier for this track.","Sets <code>volume</code> in a manner that allows method chaining.","The current mixing volume of this track.","The volume for playback.","Current volume of this track.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,9,1,2,3,18,9,1,2,3,18,3,1,2,3,1,2,3,1,1,2,2,3,3,1,1,0,9,1,1,2,2,2,1,1,1,1,1,2,2,18,1,1,0,1,1,1,1,3,3,3,3,3,0,0,1,2,3,18,9,1,1,9,1,2,3,18,2,1,1,18,18,1,3,3,0,18,18,0,9,1,2,3,18,9,18,9,1,2,3,18,2,2,18,0,2,18,2,18,2,18,1,1,0,2,2,9,0,1,1,1,1,1,1,18,18,18,1,1,0,18,18,18,3,18,0,9,2,2,18,1,2,3,3,0,9,1,2,3,18,9,1,2,3,18,18,18,9,1,2,3,18,0,2,2,1,1,3,9,1,2,3,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,57,0,0,0,16,0,16,69,0,11,0,57,59,0,42,11,16,0,0,0,0,42,11,54,57,60,11,16,42,58,59,61,35,69,54,57,60,11,16,42,58,59,61,35,69,54,57,11,16,42,58,59,35,54,57,11,16,42,58,59,35,54,57,57,11,11,16,16,42,42,58,58,59,59,35,35,54,54,54,54,58,59,61,35,54,54,11,54,54,54,57,11,16,42,57,57,57,11,11,11,16,16,16,42,42,42,57,11,16,42,58,59,61,35,69,69,54,57,60,11,16,42,58,59,61,35,69,69,54,57,57,60,11,16,42,58,59,61,35,69,54,60,57,60,11,16,42,58,59,61,35,69,54,54,61,54,61,35,58,54,35,54,11,0,11,11,11,54,54,54,54,60,54,54,0,54,54,16,69,54,58,57,11,16,42,58,59,35,54,11,69,35,57,57,60,11,16,42,58,59,61,35,69,54,57,60,11,16,42,58,59,61,35,69,54,60,57,60,11,16,42,58,59,61,35,69,54,57,60,11,16,42,58,59,61,35,69,54,35,35,35,78,78,0,0,0,78,79,22,78,79,22,78,79,22,78,79,22,78,78,79,79,22,22,79,22,78,79,22,78,79,22,78,79,22,78,79,22,78,79,22,79,79,79,22,22,78,79,22,78,79,22,78,79,22,78,79,22,78,79,22,83,0,0,0,83,83,83,83,84,84,83,209,15,83,83,83,83,0,0,83,0,84,84,209,15,0,0,84,83,84,0,84,83,80,83,84,80,83,84,80,80,80,80,80,80,83,83,84,84,80,83,83,83,83,83,83,83,83,84,84,84,84,80,83,84,80,83,84,80,80,80,80,80,80,80,80,84,84,80,83,84,80,83,84,80,83,84,80,83,84,80,83,84,80,83,84,55,93,96,98,55,0,55,93,96,93,96,93,96,97,97,0,0,0,0,0,97,97,55,97,97,97,93,96,93,96,93,96,93,98,55,0,0,93,96,56,94,95,93,96,94,97,98,55,95,93,96,94,97,98,55,96,97,98,55,96,97,98,55,96,96,97,97,98,98,55,55,95,95,95,0,94,95,96,97,98,55,95,95,95,96,96,96,97,97,97,98,98,98,55,55,55,95,93,96,94,97,98,55,95,93,96,94,97,98,98,98,55,55,55,96,97,98,55,95,93,96,94,97,98,55,95,93,96,94,97,98,55,95,94,94,95,93,96,97,98,55,95,93,96,94,97,98,55,95,93,96,94,97,98,55,95,93,96,94,97,98,55,95,93,96,94,97,98,55,102,101,0,0,0,0,102,102,102,101,0,0,101,102,0,0,102,100,107,101,102,103,104,105,106,100,107,101,102,103,104,105,106,100,107,100,101,102,103,104,105,106,100,101,102,103,104,105,106,100,100,101,101,102,102,103,103,104,104,105,105,106,106,106,100,101,102,103,104,105,106,100,100,100,101,101,101,102,102,102,103,103,103,104,104,104,105,105,105,106,106,106,100,107,101,102,103,104,105,106,100,107,101,102,102,103,104,105,106,100,107,100,101,100,107,101,102,103,104,105,106,100,107,101,102,103,104,105,106,107,103,104,106,103,104,103,104,107,103,104,100,100,107,105,105,100,100,101,102,103,104,105,106,100,107,101,102,103,104,105,106,100,107,101,102,103,104,105,106,100,107,101,102,103,104,105,106,100,107,101,102,103,104,105,106,0,0,0,12,29,32,12,29,32,12,29,32,12,29,32,12,12,29,29,32,32,12,29,32,12,12,12,29,29,29,32,32,32,12,12,29,29,32,32,12,12,12,12,29,29,29,29,32,32,32,32,12,29,32,12,29,32,12,29,32,12,29,32,12,29,32,12,29,32,12,29,32,12,29,32,12,29,32,0,0,0,0,0,0,0,0,134,130,0,0,0,67,67,0,0,0,0,117,135,135,134,134,0,145,145,0,117,130,130,145,0,116,116,67,118,118,119,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,120,121,122,0,116,116,128,116,124,128,119,116,124,128,119,116,116,124,124,128,128,119,119,0,128,0,118,124,128,119,118,124,128,119,116,136,116,133,116,116,116,116,116,133,130,130,134,134,135,135,117,117,116,124,128,119,137,136,121,122,129,145,137,137,136,67,67,67,67,67,67,67,67,67,67,133,133,133,130,134,134,134,135,117,117,116,124,128,119,116,128,129,129,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,145,67,120,121,122,67,67,67,67,67,67,136,145,67,121,122,133,124,128,119,119,119,128,119,145,67,145,67,137,145,121,122,133,128,116,119,121,122,118,124,128,119,121,122,133,130,134,135,117,116,116,136,116,116,116,116,124,128,119,130,134,135,117,116,136,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,120,120,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,0,121,122,129,145,137,136,67,133,130,134,135,117,116,124,128,119,152,0,0,0,155,156,155,156,0,0,0,0,156,156,156,0,156,155,156,155,156,152,156,0,153,140,154,139,155,156,152,138,153,140,154,139,155,156,152,138,140,139,138,140,139,152,138,140,139,152,138,140,139,152,152,138,153,0,153,0,153,154,155,155,156,156,152,153,153,140,154,139,155,155,155,155,156,156,156,156,156,156,156,152,152,152,138,153,140,154,139,155,156,152,138,153,140,154,139,155,156,152,138,140,139,138,154,140,139,138,140,139,138,140,139,138,0,140,139,138,140,139,138,140,139,138,154,153,140,139,152,138,155,156,154,153,140,154,139,155,156,152,138,153,140,154,139,155,156,152,138,153,140,154,139,155,156,152,138,153,140,154,139,155,156,152,138,140,139,138,0,0,0,0,0,163,161,165,163,161,165,161,163,165,161,163,165,161,163,161,165,163,161,165,163,165,163,161,165,161,163,165,163,165,163,165,161,163,165,163,165,161,163,165,163,161,165,163,161,165,163,161,165,163,161,165,163,161,165,0,0,0,0,0,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,0,0,210,210,210,0,210,210,0,0,184,184,184,0,210,210,210,210,187,28,0,187,28,0,0,0,0,187,28,0,0,52,187,185,28,186,52,187,185,28,186,28,28,28,28,185,186,52,187,185,28,186,52,187,185,28,186,52,189,187,52,187,185,28,186,52,187,185,28,186,52,52,28,52,187,185,28,186,52,187,185,28,186,52,187,185,28,186,190,28,52,187,185,28,186,0,0,197,197,196,199,192,199,196,198,198,196,0,192,197,199,196,199,0,0,200,200,0,0,197,199,0,0,0,0,0,0,200,0,66,73,66,73,73,203,193,65,194,196,197,66,198,199,73,202,200,201,203,193,65,194,196,197,66,198,199,73,202,200,201,194,196,197,66,198,199,73,200,201,194,196,197,66,198,199,73,200,201,194,196,196,197,197,66,66,198,198,199,199,73,73,200,200,201,201,73,73,194,198,199,73,200,201,73,202,66,66,198,199,200,201,198,198,198,199,199,199,200,200,200,65,196,196,197,197,66,198,199,73,202,200,201,203,193,65,65,194,196,196,197,66,198,199,73,202,200,201,66,202,65,203,193,65,194,196,197,66,198,199,73,202,200,201,203,193,65,194,196,197,66,198,199,73,202,200,201,199,73,203,73,66,65,193,65,201,194,66,66,193,73,65,73,65,65,66,73,65,66,193,201,193,65,201,193,201,193,201,203,203,73,194,66,66,66,73,65,66,73,194,196,197,66,198,199,73,200,201,196,197,203,193,65,194,196,197,66,198,199,73,202,200,201,203,193,65,194,196,197,66,198,199,73,202,200,201,203,193,65,194,196,197,66,198,199,73,202,200,201,66,65,66,65,65,193,65,201,203,193,65,194,196,197,66,198,199,73,202,200,201],"f":"```````````{ce{}{}}000000000`{bb}{dd}{ff}{{ce}h{}{}}00{c{{l{j}}}{}}{c{{l{n}}}{}}1010{{bA`}b}``{AbAd}{{bAf}b}`{d{{Aj{Ah}}}}{d{{Aj{f}}}}{{dAl}{{An{h}}}}{{bB`}b}`{{bBb}b}`{{}b}{dc{}}0{{BdBf}{{Bj{{l{Bh}}}}}}```{{bBl}b}`{{b{Aj{Bb}}}b}``{{ff}Al}{{ce}Al{}{}}00``{{bBn}C`}{{dBn}C`}{{fBn}C`}{{BdBn}C`}{{Abcg}c{}{}{{Cd{ce}{{Cb{c}}}}}}{{bCf}b}`{cc{}}0000{{cCheb}d{{Cl{Cj}}Cn}{{Cl{D`}}Cn}}:`{{Bdc}{{Aj{{Dd{{Db{d}}}}}}}{{Cl{Cj}}}}{{Bdc}{{Dd{{Db{d}}}}}{{Cl{Cj}}}}{bDf}`{{fc}hDh}`{{BdBfDj}{{Bj{{l{Bh}}}}}}{{BdDlc}h{{Cl{D`}}}}`{ce{}{}}00000{Bdc{}}11111{dAl}0{BdAb}`{{dc}{{An{Dn}}}{{Cl{Ah}}Cn}}{{Bdce}{{An{{Dd{{Db{d}}}}}}}{{Cl{Cj}}}{{Cl{Ah}}}}{{dc}{{An{E`}}}{{Cl{Ah}}Cn}}{{Bdce}{{An{{Eb{f{Dd{{Db{d}}}}}}}}}{{Cl{Cj}}}{{Cl{Ah}}}}{d{{An{h}}}}{{Bdc}{{An{h}}}{{Cl{Cj}}}}{{bEd}b}``{{dAl}{{An{h}}}}{{cChe}d{{Cl{Cj}}Cn}{{Cl{D`}}Cn}}{Ab{{Aj{c}}}{}}`{{bEf}b}`{{bAd}b}`0`{{BdEh}h}{{BdBf{El{Ej}}}{{Bj{{l{Bh}}}}}}8{{bDf}b}``{{}{{Dd{Bd}}}}{b{{Dd{Bd}}}}{{BdEn{Aj{F`}}Fb}{{Bj{{l{Bh}}}}}}`{{Bdb}h}`{Ab{{Eb{Ad{Aj{Ad}}}}}}{{ce}d{{Cl{Cj}}Cn}{{Cl{D`}}Cn}}{{ceb}d{{Cl{Cj}}Cn}{{Cl{D`}}Cn}}{{BdEnFd}{{Bj{{l{Bh}}}}}}{ce{}{}}00``{c{{Ff{e}}}{}{}}000000000{{{Dd{Fh}}c}Bd{{Cl{D`}}}}{{{Dd{Fh}}cb}Bd{{Cl{D`}}}}{cFj{}}0000`{{dF`F`}h}{{dF`{Aj{c}}}h{{Cl{Ah}}Cn}}{{bAl}b}``77777```````````````````````````````````````````{{FlFnc}hG`}8888888888888888888888{GbGb}{AfAf}{B`B`}{EdEd}{GdGd}{GfGf}{DfDf}{FlFl}{{ce}h{}{}}0000000{c{{l{j}}}{}}{c{{l{n}}}{}}10100110101001{Flb}{{Flf}Gh}{{}Gd}{{}Gf}{{}Gj}{{}Df}{{}Fl}{Flh}{{AfcGlAd}{{Ff{hGn}}}H`}{{FlHb}Hd}{{FlHf}Hd}{{FlHb{Aj{Bb}}}Hd}{{GbGb}Al}{{AfAf}Al}{{B`B`}Al}{{EdEd}Al}{{ce}Al{}{}}00000000000{{GbBn}{{Ff{hHh}}}}{{AfBn}C`}{{B`Bn}C`}{{EdBn}C`}{{GdBn}C`}{{GfBn}C`}{{GjBn}C`}{{DfBn}C`}{{HjBn}C`}0{{FlBn}C`}{cc{}}00000000{HlHj}11{{Gbc}hDh}{ce{}{}}0000000000{c{}{}}11111111111{FlAl}{GjDl}{Flh}1{DfDl}`{{FlAl}h}{GdDf}{bFl}{AfAd}`0{{}Ad}1{{FlHb}Hd}{{FlHf}Hd}10{{{Bj{Gh}}Hn}{{I`{c}}}{}}{FlIb}:`{{FlGb}h}{{Flb}h}{B`Al}{Hj{{Aj{Id}}}}>`{ce{}{}}0000000{AfFb}{cF`{}}{DfDl}{c{{Ff{e}}}{}{}}{If{{Ff{GbIh}}}}111111111111111111111{{{Bj{c}}Hn}I`{}}{cFj{}}000000000077777777777{Df{{Ff{{Ij{{Dd{Gj}}}}Hj}}}}05`````888888{IlIl}{InIn}{BlBl}{{ce}h{}{}}00{c{{l{j}}}{}}{c{{l{n}}}{}}1001{{}In}{{}Bl}{{IlIl}Al}{{InIn}Al}{{BlBl}Al}{{IlBn}C`}{{InBn}C`}{{BlBn}C`}{cc{}}00{ce{}{}}00000`````000{c{{Ff{e}}}{}{}}00000{cFj{}}00222`````````````````````````````````222222{J`Jb}{J`Ad}{cJ`Jd}0{{J`Bn}{{Ff{hHh}}}}0{{JfBn}C`}0{{JhBn}C`}09{{{Jj{`}}}Jf}{JlJf}{JnJf}2{J`Jf}=3{GnJf}>{K`Jh}{JfJh}{{{l{{Kb{Ej}}}}}Jh}{ce{}{}}00000{{KdKf}J`}0{J`{{Aj{Kh}}}}{J`Al}000{J`Ad}{JhAl}0{J`{{Aj{Id}}}}{Jf{{Aj{Id}}}}{Jh{{Aj{Id}}}}{cF`{}}00{c{{Ff{e}}}{}{}}00000{cFj{}}00;;;```````````````````````````````````````{{G`Kj}{{Bj{{l{Bh}}}}}}{{KlKnBb}h}=============={L`L`}{LbLb}{LdLd}{FnFn}{{ce}h{}{}}000{c{{l{j}}}{}}{c{{l{n}}}{}}101001{{KnKn}Lf}{{ce}Lf{}{}}{{KnBb}h}`{{}Kl}{{KnKn}Al}{{L`L`}Al}{{LbLb}Al}{{LdLd}Al}{{FnFn}Al}{{ce}Al{}{}}00000000000000{{KnBn}{{Ff{hHh}}}}{{KjBn}C`}{{L`Bn}C`}{{KlBn}C`}{{LbBn}C`}{{LdBn}C`}{{FnBn}C`}{cc{}}0000{LbLd}1{L`Ld}2{LbFn}{L`Fn}{{L`c}hDh}{{Lbc}hDh}{{Ldc}hDh}{{Fnc}hDh}{ce{}{}}0000000000000{{Fnc}KnG`}{{}Kl}0{{KnKn}{{Aj{Lf}}}}{Kj{{Aj{L`}}}}4444{c{{Ff{e}}}{}{}}0000000000000{cFj{}}0000006666666`````````````````6666666666666666``{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{{ce}h{}{}}000000{c{{l{n}}}{}}{c{{l{j}}}{}}100101101010`{{LhLh}Al}{{LjLj}Al}{{LlLl}Al}{{LnLn}Al}{{M`M`}Al}{{MbMb}Al}{{MdMd}Al}{{ce}Al{}{}}00000000000000000000{{LhBn}C`}{{MfBn}C`}{{LjBn}C`}{{LlBn}C`}{{LnBn}C`}{{M`Bn}C`}{{MbBn}C`}{{MdBn}C`}{cc{}}000{JfLl}1111``{{Lhc}hDh}{{Ljc}hDh}{ce{}{}}000000000000000`````````{LnMh}{M`Mj}``````2222222{c{{Ff{e}}}{}{}}000000000000000{cFj{}}000000044444444```444444{AhAh}{CjCj}{D`D`}{{ce}h{}{}}00{c{{l{n}}}{}}{c{{l{j}}}{}}0101{{AhAh}Al}{{CjCj}Al}{{D`D`}Al}{{ce}Al{}{}}00000000{{AhBn}C`}0{{CjBn}C`}0{{D`Bn}C`}0{MlAh}{{{N`{Mn}}}Ah}{NbAh}{cc{}}0{{{N`{Nd}}}Cj}{MlCj}{EnCj}3{MlD`}{DjD`}{{{N`{Nf}}}D`}{{Ahc}hDh}{{Cjc}hDh}{{D`c}hDh}{ce{}{}}00000000{cF`{}}00{c{{Ff{e}}}{}{}}00000{cFj{}}00333```````````````````````````````````{Hf{{Ff{NhNj}}}}{Nl{{Bj{{l{Bh}}}}}}0{Nn{{Bj{{l{Bh}}}}}}66666666666666666666666666666666{O`{{Bj{{l{Bh}}}}}}{Ob{{Aj{Dl}}}}{{{Od{c}}}{{Aj{Dl}}}Of}````{NhNh}{{{Oh{c}}}{{Oh{c}}}{Oj{On{Ol}}}}{A`A`}{NnNn}{{ce}h{}{}}000{c{{l{j}}}{}}{c{{l{n}}}{}}011010```{Nl{{Ff{{Ab{{l{Of}}}}Ad}}}}{{{Oh{c}}}{{Ff{{Ab{{l{Of}}}}Ad}}}{{On{Ol}}AfAh}}{A`{{Ff{{Ab{{l{Of}}}}Ad}}}}{Nn{{Ff{{Ab{{l{Of}}}}Ad}}}}?{{{Oh{c}}}{{Bj{{l{Bh}}}}}{{On{Ol}}AfAh}}{A`{{Bj{{l{Bh}}}}}}{Nn{{Bj{{l{Bh}}}}}}``{{}Nh}{Ajh}`{{NhNh}Al}{{ce}Al{}{}}00{{AjBn}C`}{{AdBn}C`}0{{AlBn}C`}0{{AnBn}C`}0{{NjBn}C`}0{{NhBn}C`}{{{Oh{c}}Bn}C`{Cn{On{Ol}}}}{{A`Bn}C`}{{NnBn}C`}``{cc{}}0000{AA`AAb}1{AjHf}{NnHf}3{{{Oh{c}}}Hf{{On{Ol}}AfAh}}{AAdHf}{AAfHf}{AAhHf}{cHf{{On{{AAl{AAj}}}}AfAh}}{{{Od{c}}}Hf{OfAfAh}}{A`Hf}{AAnAj};{{{Ij{AAn}}}Aj}<{AB`Al}{AdAl}>>{AdNj}?????{{{AAl{AAj}}}{{Ff{NhJ`}}}}```{ce{}{}}0000000000000000000000000000000{ABbAl}{HfAl}{O`Al}{ObAl}{{{Od{c}}}AlOf}{Hf{{Aj{ABb}}}}0{{HfABd}{{Ff{HfAd}}}}{Hf{{Ff{HfAd}}}}{{HfA`CfABd}{{Ff{HfAl}}}}{{HfA`Cf}{{Ff{HfAl}}}}`{ABb{{Ff{AAbAn}}}}{Hf{{Ff{AAbAn}}}}{{{l{O`}}Ad}Ob}{{cBfBf}{{Od{c}}}Of}{{{Ij{AAn}}}Aj}{c{{Oh{c}}}{{On{Ol}}}}{{ABfF`}A`}{{ABfF`}Nn}0{{FbABfF`}Nn}{{ABfF`ABh}A`}1{ABb{{Aj{AA`}}}}{Hf{{Aj{AA`}}}}10`{{ABbA`Cf}{{Ff{ABbAB`}}}}{{Ob{AAl{AAj}}}{{ABj{Ad}}}}{{{Od{c}}{AAl{AAj}}}{{ABj{Ad}}}Of}{{Aj{AAl{AAj}}}{{ABj{Ad}}}}``{{Nn{Aj{Ad}}}{{Ff{{Ij{Nh}}Ad}}}}{{ObABl}{{ABj{Dl}}}}{{{Od{c}}ABl}{{ABj{Dl}}}Of}{NlAl}{{{Oh{c}}}Al{{On{Ol}}AfAh}}{A`Al}{NnAl}{{cAd}Ad{}}00{Ad{{Aj{Id}}}}{Al{{Aj{Id}}}}{An{{Aj{Id}}}}{Nj{{Aj{Id}}}}```{NhNh}``{ce{}{}}000{cF`{}}000``{c{{Ff{e}}}{}{}}0000000000000000000000000000000{{O`Dl}{{Bj{{l{Bh}}}}}}0{cFj{}}000000000000000`4444444444444444```````````````````````{{ABncAd}h{{Cl{AC`}}}}5555555555555555{AAh{{Aj{Dl}}}}{AAf{{Aj{Dl}}}}{AAd{{Aj{Dl}}}}{AAhAAh}{AAfAAf}{AC`AC`}{AAdAAd}{{ce}h{}{}}000{c{{l{j}}}{}}0{c{{l{n}}}{}}11`{GbAd}{{}ACb}{AdABn}{AdACb}{{ACdBn}C`}{{ACfBn}C`}0{{AChBn}C`}0{{AC`Bn}C`}`{cc{}}000{ACjACf}{AdACf}2{AClACf}{ACjACh}{IhACh}{AB`ACh}{AClACh}{J`ACh}8{AdACh}{AdAC`}{BbAC`};;{ce{}{}}000000000000000{AAhAl}{AAfAl}{AAdAl}{ACdAd}{{HfGb}{{Ff{AAhACh}}}}{Hf{{Ff{AAfACh}}}}{Hf{{Ff{AAdACf}}}}{AAhAAh}{AAfAAf}{AAdAAd}```{AlAd}{{AAh{AAl{AAj}}}{{ABj{Ad}}}}{{AAf{AAl{AAj}}}{{ABj{Ad}}}}{{AAd{AAl{AAj}}}{{ABj{Ad}}}}{{AAhABl}{{ABj{Dl}}}}{{AAfABl}{{ABj{Dl}}}}{{AAdABl}{{ABj{Dl}}}}{{cAd}Ad{}}00{ACdc{}}`{ce{}{}}000{cF`{}}0{{ACdc{AAl{AAj}}}{{ABj{ACn}}}AD`}{c{{Ff{e}}}{}{}}000000000000000{cFj{}}000000044444444{{HfGb{Aj{ACb}}}{{Ff{AAhACh}}}}{{Hf{Aj{ACb}}}{{Ff{AAfACh}}}}{{Hf{Aj{ABn}}}{{Ff{AAdACf}}}}`````777777{ADbADd}{ADf{{AAl{ADh}}}}{ADj{{AAl{ADh}}}}{{ADbADl}{{AE`{ADn}}}}{ADf{{Aj{AEb}}}}{ADj{{Aj{AEb}}}}{ADbAEd}{cc{}}00???{{{l{ADf}}}AEf}{{{l{ADj}}}AEf}{ce{}{}}00{ADbADn}{ADfAEh}{ADjAEh}{ADf{{AE`{ADl}}}}{ADj{{AE`{ADl}}}}{{}{{AAl{AEj}}}}0{ADbh}{{{AAl{AAj}}}AAj}0{{ADfAElAEn}{{AE`{AF`}}}}{{ADjAElAEn}{{AE`{AF`}}}}{{}{{AAl{AFb}}}}{ADf{{AAl{AEb}}}}{ADj{{AAl{AEb}}}}{c{{Ff{e}}}{}{}}00000{{AEfAFd}{{AE`{ADf}}}}{{ADdAFf}{{AE`{ADb}}}}{{AEfAFd}{{AE`{ADj}}}}{cFj{}}00{ce{}{}}00{{AdAl}Bb}{Al{{AFj{AFh}}}}1{{BbAl}Ad}0``3333{cc{}}044{c{}{}}055{{{Bj{Dn}}Hn}{{I`{c}}}{}}{{{Bj{E`}}Hn}{{I`{c}}}{}}<<<<{{{Bj{c}}Hn}I`{}}09988``884{AFl{{Aj{{Dd{Bd}}}}}}99{AFnAFn}{{AFnb}AFn}{AG`AG`}{{AG`b}AG`}{{AG`{Dd{Bd}}}AG`}{{AFn{Dd{Bd}}}AFn}{c{{Ff{e}}}{}{}}0{cFj{}}{ce{}{}}`````````````0000000000{ChCh}{{ce}h{}{}}{c{{l{j}}}{}}{c{{l{n}}}{}}{{}AGb}{{}AGd}{{FhBn}C`}{{AGfBn}C`}{{AGbBn}C`}{{ChBn}C`}{{AGdBn}C`}{cc{}}0000{{FhDl}{{Aj{AGh}}}}{{AGjDl}{{Aj{{Dd{AGl}}}}}}{{AGfDl}{{Aj{Ch}}}}??????????{{{AGn{DlAGh}}}Fh}{FhDl}{ce{}{}}{c{{Ff{e}}}{}{}}000000000{cFj{}}0000{{AGlCj{Aj{Ah}}AlAl}{{Bj{{l{Bh}}}}}}{{ChCj{Aj{Ah}}AlAl}{{Bj{{l{Bh}}}}}}44444``````````````````````````````````{{Hdc}{{AH`{h}}}{{AHf{AHb}{{Cb{{Aj{AHd}}}}}}AfAh}}{{IbHbFl}Hd}{{HdFnc}{{AH`{h}}}G`}{{IbHfFl}Hd}{{IbHbFl{Aj{Bb}}}Hd}99999999999999999999999999{AHdAHd}{AHhAHh}{AHjAHj}{HdHd}{AHlAHl}{AHnAHn}{IbIb}{AI`AI`}{AIbAIb}{{ce}h{}{}}00000000{c{{l{j}}}{}}0{c{{l{n}}}{}}10010110010101{Ib{{Aj{Hd}}}}{Ib{{Ij{Hd}}}}{{}AHd}{{}AHl}{{}AHn}{{}Ib}{{}AI`}{{}AIb}{{IbAd}{{Aj{AId}}}}{AIdc{}}{Hd{{AH`{h}}}}0{{AHlAHl}Al}{{AHnAHn}Al}{{AI`AI`}Al}{{AIbAIb}Al}{{ce}Al{}{}}00000000`{{AHhBn}C`}0{{AHjBn}C`}0{{HdBn}C`}{{AHlBn}C`}{{AHnBn}C`}{{IbBn}C`}{{AIdBn}C`}{{AI`Bn}C`}{{AIbBn}C`}{cc{}}0{cHb{{Cl{Hf}}}}111{HlAHh}22222222{Hd{{AH`{AIb}}}}{AIdHd}`{ce{}{}}0000000000000000000000000{AHnAl}{IbAl}{{{AIf{c}}}Al{}}{IbAd}{{HdAd}{{AH`{h}}}}{{HbAHl}Hb}```{AHdAHd}{Hd{{AIf{h}}}}{Hd{{AH`{h}}}}`{{Ibe}c{}{{AHf{{AIh{AId}}}{{Cb{c}}}}}}{HfHb}{{}Ib}{{HfAIj}Hb}{HbHb}5{Ib{{AH`{h}}}}16`````````{{{AIf{c}}}{{AH`{c}}}{}}01{{AHdBb}AHd}{{HdBb}{{AIf{Bb}}}}{{HdBb}{{AH`{Bb}}}}{{HdAIl}{{AH`{h}}}}56;{Ibh}{ce{}{}}00000000{cF`{}}0{c{{Ff{e}}}{}{}}0000000000000000000000000{cFj{}}000000000000{Hd{{AJ`{AIn}}}}{{HbAIj}Hb}{HdAIj}`{{HbAIl}Hb}```7777777777777","c":[],"p":[[5,"Config",0],[5,"Call",0],[5,"ConnectionInfo",0],[1,"unit"],[10,"CloneableStorage",1999],[5,"Box",2000],[10,"CloneDebuggableStorage",1999],[5,"CodecRegistry",2001],[5,"Iter",0],[1,"usize"],[6,"CryptoMode",191],[5,"ChannelId",944],[6,"Option",2002],[1,"bool"],[8,"JoinResult",494],[6,"DecodeMode",191],[5,"Duration",2003],[5,"Songbird",0],[1,"u32"],[10,"Future",2004],[5,"Pin",2005],[5,"Retry",434],[5,"Formatter",2006],[8,"Result",2006],[17,"Output"],[10,"FnMut",2007],[5,"Probe",2008],[6,"Shard",1628],[5,"GuildId",944],[10,"Into",2009],[10,"Debug",2006],[5,"UserId",944],[5,"Mutex",2010],[5,"Arc",2011],[5,"Scheduler",191],[10,"Hasher",2012],[5,"UserId",2013],[1,"u64"],[5,"Join",1584],[5,"JoinGateway",1584],[1,"tuple"],[6,"MixMode",191],[8,"NonZeroUsize",2014],[6,"Event",2015],[6,"ShardRunnerMessage",2016],[5,"UnboundedSender",2017],[5,"GuildId",2013],[5,"String",2018],[1,"str"],[5,"VoiceState",2019],[6,"Result",2020],[5,"TwilightMap",1628],[5,"TypeId",2021],[5,"Driver",191],[6,"Event",590],[10,"EventHandler",590],[6,"Bitrate",191],[5,"SchedulerConfig",191],[6,"SchedulerMode",191],[5,"Connect",191],[5,"LiveStatBlock",191],[8,"XSalsa20Poly1305",2022],[5,"Error",2023],[10,"MutablePacket",2024],[5,"Track",1705],[5,"TrackHandle",1705],[6,"Input",1022],[5,"Error",2006],[6,"SchedulerError",191],[6,"RecvError",2025],[5,"Context",2026],[6,"Poll",2027],[5,"TrackQueue",1705],[10,"Error",2028],[1,"i32"],[6,"Error",2029],[5,"Vec",2030],[6,"Strategy",434],[5,"ExponentialBackoff",434],[5,"JsonError",494],[6,"Category",2031],[10,"Display",2006],[6,"ConnectionError",494],[6,"JoinError",494],[5,"SendError",2025],[5,"Error",2032],[5,"Elapsed",2033],[5,"SendError",2034],[5,"TrySendError",2017],[6,"Unexpected",2035],[10,"Expected",2035],[6,"ErrorKind",2032],[6,"EventContext",590],[5,"EventStore",590],[5,"EventData",590],[6,"CoreEvent",590],[6,"TrackEvent",590],[6,"UntimedEvent",590],[6,"Ordering",2036],[5,"ConnectData",759],[6,"DisconnectKind",759],[6,"DisconnectReason",759],[5,"RtcpData",759],[5,"RtpData",759],[5,"VoiceTick",759],[5,"VoiceData",759],[5,"DisconnectData",759],[6,"RtcpPacket",2037],[5,"RtpPacket",2038],[8,"NonZeroU64",2014],[5,"ChannelMarker",2039],[5,"Id",2040],[5,"ChannelId",2013],[5,"GuildMarker",2039],[5,"UserMarker",2039],[5,"AuxMetadata",1022],[6,"AuxMetadataError",1022],[10,"Compose",1022],[5,"YoutubeDl",1022],[10,"AsyncMediaSource",1022],[5,"AsyncAdapterStream",1022],[5,"RawAdapter",1022],[10,"MediaSource",2041],[5,"File",1022],[10,"Clone",2042],[5,"Path",2043],[10,"AsRef",2009],[5,"HttpRequest",1022],[5,"AudioStream",1022],[6,"AudioStreamError",1022],[10,"Send",2044],[10,"Sync",2044],[5,"ChildContainer",1022],[6,"MakePlayableError",1022],[6,"MetadataError",1022],[5,"Parsed",1022],[5,"Metadata",1022],[5,"Memory",1350],[5,"Decompressed",1350],[5,"Compressed",1350],[1,"u8"],[1,"slice"],[5,"Child",2045],[6,"Error",2046],[6,"LiveInput",1022],[5,"Handle",2047],[5,"Client",2048],[5,"HeaderMap",2049],[8,"Result",2032],[6,"SeekFrom",2050],[5,"Config",2051],[6,"LengthHint",1350],[5,"Config",1350],[5,"OpusCompressor",1350],[6,"Error",1350],[6,"CodecCacheError",1350],[5,"JoinError",2052],[6,"CatcherError",2051],[6,"TransformPosition",2051],[10,"Read",2050],[5,"OpusDecoder",1520],[5,"CodecParameters",2001],[5,"DcaReader",1520],[5,"Cue",2053],[5,"RawReader",1520],[5,"Packet",2053],[6,"AudioBufferRef",2054],[8,"Result",2046],[5,"Track",2053],[5,"FinalizeResult",2001],[5,"MediaSourceStream",2055],[5,"Metadata",2056],[5,"Descriptor",2008],[6,"SeekMode",2053],[6,"SeekTo",2053],[5,"SeekedTo",2053],[5,"CodecDescriptor",2001],[5,"FormatOptions",2053],[5,"DecoderOptions",2001],[5,"Decoder",2057],[8,"Result",2029],[5,"Context",2058],[5,"ClientBuilder",2059],[10,"SerenityInit",1610],[5,"SerenitySharder",1628],[5,"SerenityShardHandle",1628],[6,"Sharder",1628],[5,"MessageSender",2060],[10,"GenericSharder",1628],[10,"VoiceUpdate",1628],[5,"HashMap",2061],[8,"TrackResult",1705],[5,"View",1705],[5,"Action",1705],[10,"FnOnce",2007],[6,"ControlError",1705],[6,"PlayError",1705],[6,"LoopState",1705],[6,"PlayMode",1705],[6,"ReadyState",1705],[5,"TrackState",1705],[5,"Queued",1705],[5,"TrackCallback",1705],[5,"VecDeque",2062],[5,"Uuid",2063],[1,"f32"],[5,"TypeMap",1999],[5,"RwLock",2064],[8,"ConnectionResult",494],[5,"SongbirdKey",1610]],"b":[[307,"impl-Display-for-Error"],[308,"impl-Debug-for-Error"],[535,"impl-Error-for-Error"],[536,"impl-Error-for-Error"],[537,"impl-Display-for-Error"],[538,"impl-Debug-for-Error"],[539,"impl-Display-for-Error"],[540,"impl-Debug-for-Error"],[541,"impl-Debug-for-JoinError"],[542,"impl-Display-for-JoinError"],[544,"impl-From%3CSendError%3CWsMessage%3E%3E-for-Error"],[545,"impl-From%3CError%3E-for-Error"],[546,"impl-From%3CElapsed%3E-for-Error"],[547,"impl-From%3CSendError%3CEventMessage%3E%3E-for-Error"],[548,"impl-From%3CError%3E-for-Error"],[550,"impl-From%3CSendError%3CMixerMessage%3E%3E-for-Error"],[551,"impl-From%3CError%3E-for-Error"],[553,"impl-From%3CSendError%3E-for-JoinError"],[554,"impl-From%3CError%3E-for-JoinError"],[555,"impl-From%3CBox%3CTrySendError%3CShardRunnerMessage%3E%3E%3E-for-JoinError"],[698,"impl-From%3CTrackEvent%3E-for-UntimedEvent"],[700,"impl-From%3CCoreEvent%3E-for-UntimedEvent"],[702,"impl-From%3CTrackEvent%3E-for-Event"],[703,"impl-From%3CCoreEvent%3E-for-Event"],[977,"impl-Debug-for-ChannelId"],[978,"impl-Display-for-ChannelId"],[979,"impl-Display-for-GuildId"],[980,"impl-Debug-for-GuildId"],[981,"impl-Debug-for-UserId"],[982,"impl-Display-for-UserId"],[983,"impl-From%3CNonZero%3Cu64%3E%3E-for-ChannelId"],[984,"impl-From%3CId%3CChannelMarker%3E%3E-for-ChannelId"],[985,"impl-From%3CChannelId%3E-for-ChannelId"],[988,"impl-From%3CId%3CGuildMarker%3E%3E-for-GuildId"],[989,"impl-From%3CNonZero%3Cu64%3E%3E-for-GuildId"],[990,"impl-From%3CGuildId%3E-for-GuildId"],[992,"impl-From%3CNonZero%3Cu64%3E%3E-for-UserId"],[993,"impl-From%3CUserId%3E-for-UserId"],[994,"impl-From%3CId%3CUserMarker%3E%3E-for-UserId"],[1137,"impl-Display-for-AudioStreamError"],[1138,"impl-Debug-for-AudioStreamError"],[1139,"impl-Debug-for-MakePlayableError"],[1140,"impl-Display-for-MakePlayableError"],[1141,"impl-Debug-for-MetadataError"],[1142,"impl-Display-for-MetadataError"],[1143,"impl-Display-for-AuxMetadataError"],[1144,"impl-Debug-for-AuxMetadataError"],[1158,"impl-From%3CChildContainer%3E-for-Input"],[1159,"impl-From%3CYoutubeDl%3E-for-Input"],[1161,"impl-From%3CFile%3CP%3E%3E-for-Input"],[1162,"impl-From%3CMemory%3E-for-Input"],[1163,"impl-From%3CDecompressed%3E-for-Input"],[1164,"impl-From%3CCompressed%3E-for-Input"],[1165,"impl-From%3CT%3E-for-Input"],[1166,"impl-From%3CRawAdapter%3CA%3E%3E-for-Input"],[1167,"impl-From%3CHttpRequest%3E-for-Input"],[1168,"impl-From%3CChild%3E-for-ChildContainer"],[1170,"impl-From%3CVec%3CChild%3E%3E-for-ChildContainer"],[1172,"impl-From%3CError%3E-for-MakePlayableError"],[1173,"impl-From%3CAudioStreamError%3E-for-MakePlayableError"],[1412,"impl-Display-for-Error"],[1413,"impl-Debug-for-Error"],[1414,"impl-Debug-for-CodecCacheError"],[1415,"impl-Display-for-CodecCacheError"],[1422,"impl-From%3CJoinError%3E-for-Error"],[1423,"impl-From%3CAudioStreamError%3E-for-Error"],[1425,"impl-From%3CCatcherError%3E-for-Error"],[1426,"impl-From%3CJoinError%3E-for-CodecCacheError"],[1427,"impl-From%3CError%3E-for-CodecCacheError"],[1428,"impl-From%3CError%3E-for-CodecCacheError"],[1429,"impl-From%3CCatcherError%3E-for-CodecCacheError"],[1430,"impl-From%3CError%3E-for-CodecCacheError"],[1432,"impl-From%3CAudioStreamError%3E-for-CodecCacheError"],[1433,"impl-From%3Cusize%3E-for-LengthHint"],[1434,"impl-From%3CDuration%3E-for-LengthHint"],[1831,"impl-Display-for-ControlError"],[1832,"impl-Debug-for-ControlError"],[1833,"impl-Display-for-PlayError"],[1834,"impl-Debug-for-PlayError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
